name: Cross-Platform CI

on: [push, pull_request]

jobs:
  build-windows-msvc:
    name: Windows (MSVC)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure with CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        run: ctest --test-dir build -C Release

      - name: Set Badge Success
        if: success()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: windows-msvc
          status: success
          color: green
          github_token: ${{ secrets.github_token }}

      - name: Set Badge Failure
        if: failure()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: windows-msvc
          status: failure
          color: red
          github_token: ${{ secrets.github_token }}

  build-windows-clang:
    name: Windows (Clang)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set clang-cl as compiler
        run: |
          echo "CC=clang-cl" >> $env:GITHUB_ENV
          echo "CXX=clang-cl" >> $env:GITHUB_ENV

      - name: Configure with CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        run: ctest --test-dir build -C Release

      - name: Set Badge Success
        if: success()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: windows-clang
          status: success
          color: green
          github_token: ${{ secrets.github_token }}

      - name: Set Badge Failure
        if: failure()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: windows-clang
          status: failure
          color: red
          github_token: ${{ secrets.github_token }}

  build-ubuntu-gcc:
    name: Ubuntu (g++13)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install GCC 13 and CMake
        run: |
          sudo apt update
          sudo apt install -y g++-13 cmake
          echo "CC=gcc-13" >> $GITHUB_ENV
          echo "CXX=g++-13" >> $GITHUB_ENV

      - name: Configure with CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        run: ctest --test-dir build -C Release

      - name: Set Badge Success
        if: success()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          name: ubuntu-gcc-status
          icon: github
          label: ubuntu-gcc
          status: success
          color: green
          github_token: ${{ secrets.github_token }}

      - name: Set Badge Failure
        if: failure()
        uses: RubbaBoy/BYOB@v1.3.0
        with:
            name: ubuntu-gcc-status
            icon: github
            label: ubuntu-gcc
            status: failure
            color: red
            github_token: ${{ secrets.github_token }}
            
