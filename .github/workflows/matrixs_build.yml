name: CMake Matrix Build with Badges

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            compiler: msvc
            cc: cl
            cxx: cl
            badge: windows-msvc

          - os: windows-latest
            compiler: clang
            cc: clang-cl
            cxx: clang-cl
            badge: windows-clang

          - os: ubuntu-latest
            compiler: gcc-13
            cc: gcc-13
            cxx: g++-13
            badge: ubuntu-gcc

    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}

    steps:
      - uses: actions/checkout@v4

    #   - name: Install GCC 13 (if Linux)
    #     if: runner.os == 'Linux'
    #     run: |
    #       sudo apt update
    #       sudo apt install -y g++-13 cmake

      - name: Build & Test
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
        #   ctest --test-dir build -C Release

      - name: Save build result
        if: success()
        run: |
            echo "success" > ${{ matrix.badge }}-result.txt
        
      - name: Save failure result
        if: failure()
        run: |
            echo "failure" > ${{ matrix.badge }}-result.txt
    
      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.badge }}-result
          path: ${{ matrix.badge }}-result.txt
    
      - name: Debug Badge Result
        run: cat ${{ matrix.badge }}-result.txt
        
    
  badge:
    name: Write Badge
    runs-on: ubuntu-latest
    needs: build
    strategy:
        matrix:
          include:
            - badge: windows-msvc
            - badge: windows-clang
            - badge: ubuntu-gcc
    steps:
        - uses: actions/download-artifact@v4
          with:
            name: ${{ matrix.badge }}-result
            path: .
        
        - name: Debug badge result
          run: cat ${{ matrix.badge }}-result.txt
          

        - name: Read badge result
          id: read_result
          run: |
            result=$(<${{ matrix.badge }}-result.txt)
            result=$(echo "$result" | tr -d '\r\n ')
            echo "result=$result" >> $GITHUB_OUTPUT
        
        - name: Set Badge (Success)
          if: steps.read_result.outputs.result == 'success'
          uses: RubbaBoy/BYOB@v1.3.0
          with:
              name: ${{ matrix.badge }}
              label: ${{ matrix.badge }}
              icon: github
              status: success
              color: green
              github_token: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Set Badge (Failure)
          if: steps.read_result.outputs.result != 'success'
          uses: RubbaBoy/BYOB@v1.3.0
          with:
            name: ${{ matrix.badge }}
            label: ${{ matrix.badge }}
            icon: github
            status: failure
            color: red
            github_token: ${{ secrets.GITHUB_TOKEN }}